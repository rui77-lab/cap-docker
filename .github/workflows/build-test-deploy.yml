# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build a Java project, analyze on SonarCloud

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn clean package
    - name: Upload SVR
      uses: actions/upload-artifact@v4
      with:
        name: java_srv
        path: srv
    - name: Upload DB
      uses: actions/upload-artifact@v4
      with:
        name: db
        path: db
  sonarqube:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        # Disabling shallow clones is recommended for improving the relevancy of reporting
        fetch-depth: 0
    - name: Download Java Server Folder
      uses: actions/download-artifact@v4
      with:
        name: java_srv
    - name: Print directory
      shell: bash
      run: |
          ls
    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v4.1.0
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
  build-and-push-image:
    needs: build
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          # Disabling shallow clones is recommended for improving the relevancy of reporting
          fetch-depth: 0
      - name: Download Java Server Folder
        uses: actions/download-artifact@v4
        with:
          name: java_srv
      - name: Log in to the Container registry
        uses: docker/login-action@v3.3.0
        with:
          registry: https://ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
    
      - name: Build and push Docker image
        uses: docker/build-push-action@v6.10.0
        with:
          context: .
          push: true
          tags: ghcr.io/rui77-lab/cap-docker
  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push-image
    steps:
      - uses: actions/checkout@v4
      - name: Download Java Server Folder
        uses: actions/download-artifact@v4
        with:
          name: db
          path: db
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Make the script files executable
        run: chmod +x ./.github/workflows/btp_deploy.sh
      - name: Run the deploy script
        env:
          cf_user: ${{ secrets.CF_USER }}
          cf_password: ${{ secrets.CF_PASSWORD }}
          cf_api_url: ${{vars.CF_API_URL}}
          cf_org: ${{vars.CF_ORG}}
          cf_space: ${{vars.CF_SPACE}}
        run: ./.github/workflows/btp_deploy.sh
        
